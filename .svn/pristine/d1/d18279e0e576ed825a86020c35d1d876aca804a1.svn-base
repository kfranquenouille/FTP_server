package server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;

import exception.RequestException;

import request.RequestUSER;

public class FtpClient implements Runnable {

	private String username;
	private String password;
	private String root;
	private Socket socket;
	private BufferedReader reader;
	private PrintWriter writer;
	
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public BufferedReader getReader() {
		return reader;
	}
	public void setReader(BufferedReader reader) {
		this.reader = reader;
	}
	public PrintWriter getWriter() {
		return writer;
	}
	public void setWriter(PrintWriter writer) {
		this.writer = writer;
	}
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	
	public FtpClient(final Socket socket){
		this.root="/";
		this.username="test";
		this.password="test";
		this.socket = socket;
		try {
			this.reader = new BufferedReader(new InputStreamReader(
					this.socket.getInputStream()));
			this.writer = new PrintWriter(new OutputStreamWriter(
					this.socket.getOutputStream()), true);
			this.writer.println("220 connection etablished, plz login");
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * Lit en continue les requêtes envoyées par le client et les transmets aux
	 * objets de type Request pour trouver et éxécuter la tâche voulue. Appelée
	 * dans run()
	 * 
	 * @throws IOException
	 */
	public void processRequest() throws IOException {
		String line;
		while ((line = reader.readLine()) != null) {
			String request[] = line.split("\\s");
			try {
				RequestUSER.getInstance().executeRequest(request, this);
			} catch (RequestException e) {
				e.printStackTrace();
			}
		}
	}
	@Override
	public void run() {
		try {
			this.processRequest();
		} catch (IOException e) {
		}
		try {
			this.socket.close();
			System.out.println("closed !!!!!");
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
}
